{
  "version": 3,
  "sources": ["../../@capawesome-team/capacitor-android-battery-optimization/src/definitions.ts", "../../@capawesome-team/capacitor-android-battery-optimization/src/index.ts"],
  "sourcesContent": ["export interface BatteryOptimizationPlugin {\n  /**\n   * Returns whether or not battery optimization is enabled.\n   *\n   * Only available on Android.\n   *\n   * @since 0.0.1\n   */\n  isBatteryOptimizationEnabled(): Promise<IsBatteryOptimizationEnabledResult>;\n  /**\n   * Opens the battery optimization settings page.\n   *\n   * Only available on Android.\n   *\n   * @since 0.0.1\n   */\n  openBatteryOptimizationSettings(): Promise<void>;\n  /**\n   * Requests the battery optimization ignore permission.\n   * This method needs the `REQUEST_IGNORE_BATTERY_OPTIMIZATIONS` manifest permission.\n   * Use this method only if your app meets an acceptable use case (see Google Play Policy).\n   *\n   * Only available on Android.\n   *\n   * @since 0.0.1\n   */\n  requestIgnoreBatteryOptimization(): Promise<void>;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface IsBatteryOptimizationEnabledResult {\n  /**\n   * Whether or not battery optimization is enabled.\n   *\n   * @since 0.0.1\n   */\n  enabled: boolean;\n}\n\nexport enum ErrorCode {\n  /**\n   * The picker was canceled by the user.\n   *\n   * @since 0.0.1\n   */\n  unavailable = 'unavailable',\n}\n", "import { registerPlugin } from '@capacitor/core';\n\nimport type { BatteryOptimizationPlugin } from './definitions';\n\nconst BatteryOptimization = registerPlugin<BatteryOptimizationPlugin>(\n  'BatteryOptimization',\n);\n\nexport * from './definitions';\nexport { BatteryOptimization };\n"],
  "mappings": ";;;;;;AAyCA,IAAY;CAAZ,SAAYA,YAAS;AAMnB,EAAAA,WAAA,aAAA,IAAA;AACF,GAPY,cAAA,YAAS,CAAA,EAAA;;;ACrCrB,IAAM,sBAAsB,eAC1B,qBAAqB;",
  "names": ["ErrorCode"]
}
